function[J,Jp,Jd,U,Ud,Jed] = fJacobi_tensor(type, x)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%   [J,Jp,Jd,U,Ud,Jed] = fJacobi_tensor(type,x)
%
%       x   : 手先位置　x=[x,y]'
%
%       J   : ヤコビ行列
%       Jp  : ヤコビ行列の疑似逆行列
%       Jd  : ヤコビ行列のqベクトル微分
%       U   : ヤコビ行列の正規化直交基底
%       Ud  : Uのqベクトル微分
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

draw = 0;

% %%
% clear
% 
% type = '2d_RRR'
% 
% x = [
%     0.2000;
%     0.2000;
%     1.0472
%     ];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

err = 0;

check = size(x,2);
if check ~= 1
    disp('error : f3L_Jacobi_plus input')
    
    err = 1;
    return;
end

param = get_parameter(type);
    Link = param.Link;
    l = param.l;

[J,Jp,U,error] = fJacobi(type, x);

[q, err] = fIKinematics(type, x(:,1));
switch type
    % 平面3リンク
    case '2d_RRR'
        [J,Jp,Jd,U,Ud,Jed] = fJacobi_tensor_q(type, q);
        

%         Jd = nan(size(J,1),size(J,2),Link);
%         Jd(:,:,1) = [
%                         (-l(3)*cos(q(3)+q(2)+q(1)))-l(2)*cos(q(2)+q(1))-l(1)*cos(q(1)), (-l(3)*cos(q(3)+q(2)+q(1)))-l(2)*cos(q(2)+q(1)), -l(3)*cos(q(3)+q(2)+q(1));
%                         (-l(3)*sin(q(3)+q(2)+q(1)))-l(2)*sin(q(2)+q(1))-l(1)*sin(q(1)), (-l(3)*sin(q(3)+q(2)+q(1)))-l(2)*sin(q(2)+q(1)), -l(3)*sin(q(3)+q(2)+q(1))
%                     ];
%         Jd(:,:,2) = [
%                         (-l(3)*cos(q(3)+q(2)+q(1)))-l(2)*cos(q(2)+q(1)), (-l(3)*cos(q(3)+q(2)+q(1)))-l(2)*cos(q(2)+q(1)), -l(3)*cos(q(3)+q(2)+q(1));
%                         (-l(3)*sin(q(3)+q(2)+q(1)))-l(2)*sin(q(2)+q(1)), (-l(3)*sin(q(3)+q(2)+q(1)))-l(2)*sin(q(2)+q(1)), -l(3)*sin(q(3)+q(2)+q(1))
%                     ];
%         Jd(:,:,3) = [
%                         -l(3)*cos(q(3)+q(2)+q(1)), -l(3)*cos(q(3)+q(2)+q(1)), -l(3)*cos(q(3)+q(2)+q(1));
%                         -l(3)*sin(q(3)+q(2)+q(1)), -l(3)*sin(q(3)+q(2)+q(1)), -l(3)*sin(q(3)+q(2)+q(1))
%                     ];
%         
%         Ud = nan(Link,Link);
%         Ud(:,1) = [
%                     0;
%                     0;
%                     0;
%                 ];
%         Ud(:,2) = [
%                     -(4*l(1)^2*l(2)*l(3)^3*sin(q(3))*sin(2*q(3)+2*q(2))+2*l(1)*l(2)^2*l(3)^3*sin(q(3))*sin(2*q(3)+q(2))+4*l(1)^2*l(2)^2*l(3)^2*sin(q(3))*sin(q(3)+2*q(2))+(2*l(1)^2*l(2)^3*l(3)*sin(2*q(2))-2*l(1)*l(2)^2*l(3)^3*sin(q(2)))*sin(q(3))) ...
%                         /(sqrt((-2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2)))-2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))-2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))-2*l(2)^2*l(3)^2*cos(2*q(3))+2*l(1)^2*l(2)*l(3)*cos(q(3))-l(1)^2*l(2)^2*cos(2*q(2))+2*l(1)*l(2)*l(3)^2*cos(q(2))+(2*l(2)^2+2*l(1)^2)*l(3)^2+l(1)^2*l(2)^2)*(2^(3/2)*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2))+2^(3/2)*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))+2^(3/2)*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))+2^(3/2)*l(2)^2*l(3)^2*cos(2*q(3))-2^(3/2)*l(1)^2*l(2)*l(3)*cos(q(3))+sqrt(2)*l(1)^2*l(2)^2*cos(2*q(2))-2^(3/2)*l(1)*l(2)*l(3)^2*cos(q(2))+((-2^(3/2)*l(2)^2)-2^(3/2)*l(1)^2)*l(3)^2-sqrt(2)*l(1)^2*l(2)^2));
% 
%                     ((2^(3/2)*l(1)^3*l(3)^3*sin(q(3)+q(2))+2^(3/2)*l(1)^2*l(2)*l(3)^3*sin(q(3)))*sin(2*q(3)+2*q(2))+2^(3/2)*l(1)^3*l(3)^3*cos(q(3)+q(2))*cos(2*q(3)+2*q(2))+(sqrt(2)*l(1)^2*l(2)*l(3)^3*sin(q(3)+q(2))+sqrt(2)*l(1)*l(2)^2*l(3)^3*sin(q(3)))*sin(2*q(3)+q(2))+2^(3/2)*l(1)^2*l(2)*l(3)^3*cos(q(3)+q(2))*cos(2*q(3)+q(2))+(2^(3/2)*l(1)^3*l(2)*l(3)^2*sin(q(3)+q(2))+2^(3/2)*l(1)^2*l(2)^2*l(3)^2*sin(q(3)))*sin(q(3)+2*q(2))+2^(3/2)*l(1)^3*l(2)*l(3)^2*cos(q(3)+q(2))*cos(q(3)+2*q(2))+(sqrt(2)*l(1)^3*l(2)^2*l(3)*sin(2*q(2))-sqrt(2)*l(1)^2*l(2)*l(3)^3*sin(q(2)))*sin(q(3)+q(2))+(2^(3/2)*l(1)*l(2)^2*l(3)^3*cos(2*q(3))-2^(3/2)*l(1)^3*l(2)*l(3)^2*cos(q(3))+sqrt(2)*l(1)^3*l(2)^2*l(3)*cos(2*q(2))-2^(3/2)*l(1)^2*l(2)*l(3)^3*cos(q(2))+((-2^(3/2)*l(1)*l(2)^2)-2^(3/2)*l(1)^3)*l(3)^3-sqrt(2)*l(1)^3*l(2)^2*l(3))*cos(q(3)+q(2))+(sqrt(2)*l(1)^2*l(2)^3*l(3)*sin(2*q(2))-sqrt(2)*l(1)*l(2)^2*l(3)^3*sin(q(2)))*sin(q(3))) ...
%                         /(sqrt((-2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2)))-2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))-2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))-2*l(2)^2*l(3)^2*cos(2*q(3))+2*l(1)^2*l(2)*l(3)*cos(q(3))-l(1)^2*l(2)^2*cos(2*q(2))+2*l(1)*l(2)*l(3)^2*cos(q(2))+(2*l(2)^2+2*l(1)^2)*l(3)^2+l(1)^2*l(2)^2)*(2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2))+2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))+2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))+2*l(2)^2*l(3)^2*cos(2*q(3))-2*l(1)^2*l(2)*l(3)*cos(q(3))+l(1)^2*l(2)^2*cos(2*q(2))-2*l(1)*l(2)*l(3)^2*cos(q(2))+((-2*l(2)^2)-2*l(1)^2)*l(3)^2-l(1)^2*l(2)^2));
% 
%                     -((2^(3/2)*l(1)^3*l(3)^3*sin(q(3)+q(2))+2^(3/2)*l(1)^3*l(2)*l(3)^2*sin(q(2)))*sin(2*q(3)+2*q(2))+(2^(3/2)*l(1)^3*l(3)^3*cos(q(3)+q(2))+2^(3/2)*l(1)^3*l(2)*l(3)^2*cos(q(2)))*cos(2*q(3)+2*q(2))+(sqrt(2)*l(1)^2*l(2)*l(3)^3*sin(q(3)+q(2))+sqrt(2)*l(1)^2*l(2)^2*l(3)^2*sin(q(2)))*sin(2*q(3)+q(2))+(2^(3/2)*l(1)^2*l(2)*l(3)^3*cos(q(3)+q(2))+2^(3/2)*l(1)^2*l(2)^2*l(3)^2*cos(q(2)))*cos(2*q(3)+q(2))+(2^(3/2)*l(1)^3*l(2)*l(3)^2*sin(q(3)+q(2))+2^(3/2)*l(1)^3*l(2)^2*l(3)*sin(q(2)))*sin(q(3)+2*q(2))+(2^(3/2)*l(1)^3*l(2)*l(3)^2*cos(q(3)+q(2))+2^(3/2)*l(1)^3*l(2)^2*l(3)*cos(q(2)))*cos(q(3)+2*q(2))+(sqrt(2)*l(1)^3*l(2)^2*l(3)*sin(2*q(2))-sqrt(2)*l(1)^2*l(2)*l(3)^3*sin(q(2)))*sin(q(3)+q(2))+(2^(3/2)*l(1)*l(2)^2*l(3)^3*cos(2*q(3))-2^(3/2)*l(1)^3*l(2)*l(3)^2*cos(q(3))+sqrt(2)*l(1)^3*l(2)^2*l(3)*cos(2*q(2))-2^(3/2)*l(1)^2*l(2)*l(3)^3*cos(q(2))+((-2^(3/2)*l(1)*l(2)^2)-2^(3/2)*l(1)^3)*l(3)^3-sqrt(2)*l(1)^3*l(2)^2*l(3))*cos(q(3)+q(2))+2^(3/2)*l(1)*l(2)^3*l(3)^2*cos(q(2))*cos(2*q(3))-2^(3/2)*l(1)^3*l(2)^2*l(3)*cos(q(2))*cos(q(3))+sqrt(2)*l(1)^3*l(2)^3*sin(q(2))*sin(2*q(2))+sqrt(2)*l(1)^3*l(2)^3*cos(q(2))*cos(2*q(2))-sqrt(2)*l(1)^2*l(2)^2*l(3)^2*sin(q(2))^2-2^(3/2)*l(1)^2*l(2)^2*l(3)^2*cos(q(2))^2+(((-2^(3/2)*l(1)*l(2)^3)-2^(3/2)*l(1)^3*l(2))*l(3)^2-sqrt(2)*l(1)^3*l(2)^3)*cos(q(2))) ...
%                         /(sqrt((-2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2)))-2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))-2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))-2*l(2)^2*l(3)^2*cos(2*q(3))+2*l(1)^2*l(2)*l(3)*cos(q(3))-l(1)^2*l(2)^2*cos(2*q(2))+2*l(1)*l(2)*l(3)^2*cos(q(2))+(2*l(2)^2+2*l(1)^2)*l(3)^2+l(1)^2*l(2)^2)*(2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2))+2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))+2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))+2*l(2)^2*l(3)^2*cos(2*q(3))-2*l(1)^2*l(2)*l(3)*cos(q(3))+l(1)^2*l(2)^2*cos(2*q(2))-2*l(1)*l(2)*l(3)^2*cos(q(2))+((-2*l(2)^2)-2*l(1)^2)*l(3)^2-l(1)^2*l(2)^2))
%                 ];
%         Ud(:,3) = [
%                     (sqrt((-2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2)))-2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))-2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))-2*l(2)^2*l(3)^2*cos(2*q(3))+2*l(1)^2*l(2)*l(3)*cos(q(3))-l(1)^2*l(2)^2*cos(2*q(2))+2*l(1)*l(2)*l(3)^2*cos(q(2))+(2*l(2)^2+2*l(1)^2)*l(3)^2+l(1)^2*l(2)^2)*(4*l(1)^2*l(2)*l(3)^3*sin(q(3))*sin(2*q(3)+2*q(2))+4*l(1)^2*l(2)*l(3)^3*cos(q(3))*cos(2*q(3)+2*q(2))+4*l(1)*l(2)^2*l(3)^3*sin(q(3))*sin(2*q(3)+q(2))+4*l(1)*l(2)^2*l(3)^3*cos(q(3))*cos(2*q(3)+q(2))+2*l(1)^2*l(2)^2*l(3)^2*sin(q(3))*sin(q(3)+2*q(2))+4*l(1)^2*l(2)^2*l(3)^2*cos(q(3))*cos(q(3)+2*q(2))+4*l(2)^3*l(3)^3*sin(q(3))*sin(2*q(3))+4*l(2)^3*l(3)^3*cos(q(3))*cos(2*q(3))-2*l(1)^2*l(2)^2*l(3)^2*sin(q(3))^2-4*l(1)^2*l(2)^2*l(3)^2*cos(q(3))^2+(2*l(1)^2*l(2)^3*l(3)*cos(2*q(2))-4*l(1)*l(2)^2*l(3)^3*cos(q(2))+((-4*l(2)^3)-4*l(1)^2*l(2))*l(3)^3-2*l(1)^2*l(2)^3*l(3))*cos(q(3)))) ...
%                         /(2^(5/2)*l(1)^4*l(3)^4*cos(2*q(3)+2*q(2))^2+(2^(7/2)*l(1)^3*l(2)*l(3)^4*cos(2*q(3)+q(2))+2^(7/2)*l(1)^4*l(2)*l(3)^3*cos(q(3)+2*q(2))+2^(7/2)*l(1)^2*l(2)^2*l(3)^4*cos(2*q(3))-2^(7/2)*l(1)^4*l(2)*l(3)^3*cos(q(3))+2^(5/2)*l(1)^4*l(2)^2*l(3)^2*cos(2*q(2))-2^(7/2)*l(1)^3*l(2)*l(3)^4*cos(q(2))+((-2^(7/2)*l(1)^2*l(2)^2)-2^(7/2)*l(1)^4)*l(3)^4-2^(5/2)*l(1)^4*l(2)^2*l(3)^2)*cos(2*q(3)+2*q(2))+2^(5/2)*l(1)^2*l(2)^2*l(3)^4*cos(2*q(3)+q(2))^2+(2^(7/2)*l(1)^3*l(2)^2*l(3)^3*cos(q(3)+2*q(2))+2^(7/2)*l(1)*l(2)^3*l(3)^4*cos(2*q(3))-2^(7/2)*l(1)^3*l(2)^2*l(3)^3*cos(q(3))+2^(5/2)*l(1)^3*l(2)^3*l(3)^2*cos(2*q(2))-2^(7/2)*l(1)^2*l(2)^2*l(3)^4*cos(q(2))+((-2^(7/2)*l(1)*l(2)^3)-2^(7/2)*l(1)^3*l(2))*l(3)^4-2^(5/2)*l(1)^3*l(2)^3*l(3)^2)*cos(2*q(3)+q(2))+2^(5/2)*l(1)^4*l(2)^2*l(3)^2*cos(q(3)+2*q(2))^2+(2^(7/2)*l(1)^2*l(2)^3*l(3)^3*cos(2*q(3))-2^(7/2)*l(1)^4*l(2)^2*l(3)^2*cos(q(3))+2^(5/2)*l(1)^4*l(2)^3*l(3)*cos(2*q(2))-2^(7/2)*l(1)^3*l(2)^2*l(3)^3*cos(q(2))+((-2^(7/2)*l(1)^2*l(2)^3)-2^(7/2)*l(1)^4*l(2))*l(3)^3-2^(5/2)*l(1)^4*l(2)^3*l(3))*cos(q(3)+2*q(2))+2^(5/2)*l(2)^4*l(3)^4*cos(2*q(3))^2+((-2^(7/2)*l(1)^2*l(2)^3*l(3)^3*cos(q(3)))+2^(5/2)*l(1)^2*l(2)^4*l(3)^2*cos(2*q(2))-2^(7/2)*l(1)*l(2)^3*l(3)^4*cos(q(2))+((-2^(7/2)*l(2)^4)-2^(7/2)*l(1)^2*l(2)^2)*l(3)^4-2^(5/2)*l(1)^2*l(2)^4*l(3)^2)*cos(2*q(3))+2^(5/2)*l(1)^4*l(2)^2*l(3)^2*cos(q(3))^2+((-2^(5/2)*l(1)^4*l(2)^3*l(3)*cos(2*q(2)))+2^(7/2)*l(1)^3*l(2)^2*l(3)^3*cos(q(2))+(2^(7/2)*l(1)^2*l(2)^3+2^(7/2)*l(1)^4*l(2))*l(3)^3+2^(5/2)*l(1)^4*l(2)^3*l(3))*cos(q(3))+sqrt(2)*l(1)^4*l(2)^4*cos(2*q(2))^2+((-2^(5/2)*l(1)^3*l(2)^3*l(3)^2*cos(q(2)))+((-2^(5/2)*l(1)^2*l(2)^4)-2^(5/2)*l(1)^4*l(2)^2)*l(3)^2-2^(3/2)*l(1)^4*l(2)^4)*cos(2*q(2))+2^(5/2)*l(1)^2*l(2)^2*l(3)^4*cos(q(2))^2+((2^(7/2)*l(1)*l(2)^3+2^(7/2)*l(1)^3*l(2))*l(3)^4+2^(5/2)*l(1)^3*l(2)^3*l(3)^2)*cos(q(2))+(2^(5/2)*l(2)^4+2^(7/2)*l(1)^2*l(2)^2+2^(5/2)*l(1)^4)*l(3)^4+(2^(5/2)*l(1)^2*l(2)^4+2^(5/2)*l(1)^4*l(2)^2)*l(3)^2+sqrt(2)*l(1)^4*l(2)^4);
% 
%                     ((2^(3/2)*l(1)^3*l(3)^3*sin(q(3)+q(2))+2^(3/2)*l(1)^2*l(2)*l(3)^3*sin(q(3)))*sin(2*q(3)+2*q(2))+(2^(3/2)*l(1)^3*l(3)^3*cos(q(3)+q(2))+2^(3/2)*l(1)^2*l(2)*l(3)^3*cos(q(3)))*cos(2*q(3)+2*q(2))+(2^(3/2)*l(1)^2*l(2)*l(3)^3*sin(q(3)+q(2))+2^(3/2)*l(1)*l(2)^2*l(3)^3*sin(q(3)))*sin(2*q(3)+q(2))+(2^(3/2)*l(1)^2*l(2)*l(3)^3*cos(q(3)+q(2))+2^(3/2)*l(1)*l(2)^2*l(3)^3*cos(q(3)))*cos(2*q(3)+q(2))+(sqrt(2)*l(1)^3*l(2)*l(3)^2*sin(q(3)+q(2))+sqrt(2)*l(1)^2*l(2)^2*l(3)^2*sin(q(3)))*sin(q(3)+2*q(2))+(2^(3/2)*l(1)^3*l(2)*l(3)^2*cos(q(3)+q(2))+2^(3/2)*l(1)^2*l(2)^2*l(3)^2*cos(q(3)))*cos(q(3)+2*q(2))+(2^(3/2)*l(1)*l(2)^2*l(3)^3*sin(2*q(3))-sqrt(2)*l(1)^3*l(2)*l(3)^2*sin(q(3)))*sin(q(3)+q(2))+(2^(3/2)*l(1)*l(2)^2*l(3)^3*cos(2*q(3))-2^(3/2)*l(1)^3*l(2)*l(3)^2*cos(q(3))+sqrt(2)*l(1)^3*l(2)^2*l(3)*cos(2*q(2))-2^(3/2)*l(1)^2*l(2)*l(3)^3*cos(q(2))+((-2^(3/2)*l(1)*l(2)^2)-2^(3/2)*l(1)^3)*l(3)^3-sqrt(2)*l(1)^3*l(2)^2*l(3))*cos(q(3)+q(2))+2^(3/2)*l(2)^3*l(3)^3*sin(q(3))*sin(2*q(3))+2^(3/2)*l(2)^3*l(3)^3*cos(q(3))*cos(2*q(3))-sqrt(2)*l(1)^2*l(2)^2*l(3)^2*sin(q(3))^2-2^(3/2)*l(1)^2*l(2)^2*l(3)^2*cos(q(3))^2+(sqrt(2)*l(1)^2*l(2)^3*l(3)*cos(2*q(2))-2^(3/2)*l(1)*l(2)^2*l(3)^3*cos(q(2))+((-2^(3/2)*l(2)^3)-2^(3/2)*l(1)^2*l(2))*l(3)^3-sqrt(2)*l(1)^2*l(2)^3*l(3))*cos(q(3))) ...
%                         /(sqrt((-2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2)))-2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))-2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))-2*l(2)^2*l(3)^2*cos(2*q(3))+2*l(1)^2*l(2)*l(3)*cos(q(3))-l(1)^2*l(2)^2*cos(2*q(2))+2*l(1)*l(2)*l(3)^2*cos(q(2))+(2*l(2)^2+2*l(1)^2)*l(3)^2+l(1)^2*l(2)^2)*(2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2))+2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))+2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))+2*l(2)^2*l(3)^2*cos(2*q(3))-2*l(1)^2*l(2)*l(3)*cos(q(3))+l(1)^2*l(2)^2*cos(2*q(2))-2*l(1)*l(2)*l(3)^2*cos(q(2))+((-2*l(2)^2)-2*l(1)^2)*l(3)^2-l(1)^2*l(2)^2));
% 
%                     -((2^(3/2)*l(1)^3*l(3)^3*sin(q(3)+q(2))+2^(3/2)*l(1)^3*l(2)*l(3)^2*sin(q(2)))*sin(2*q(3)+2*q(2))+2^(3/2)*l(1)^3*l(3)^3*cos(q(3)+q(2))*cos(2*q(3)+2*q(2))+(2^(3/2)*l(1)^2*l(2)*l(3)^3*sin(q(3)+q(2))+2^(3/2)*l(1)^2*l(2)^2*l(3)^2*sin(q(2)))*sin(2*q(3)+q(2))+2^(3/2)*l(1)^2*l(2)*l(3)^3*cos(q(3)+q(2))*cos(2*q(3)+q(2))+(sqrt(2)*l(1)^3*l(2)*l(3)^2*sin(q(3)+q(2))+sqrt(2)*l(1)^3*l(2)^2*l(3)*sin(q(2)))*sin(q(3)+2*q(2))+2^(3/2)*l(1)^3*l(2)*l(3)^2*cos(q(3)+q(2))*cos(q(3)+2*q(2))+(2^(3/2)*l(1)*l(2)^2*l(3)^3*sin(2*q(3))-sqrt(2)*l(1)^3*l(2)*l(3)^2*sin(q(3)))*sin(q(3)+q(2))+(2^(3/2)*l(1)*l(2)^2*l(3)^3*cos(2*q(3))-2^(3/2)*l(1)^3*l(2)*l(3)^2*cos(q(3))+sqrt(2)*l(1)^3*l(2)^2*l(3)*cos(2*q(2))-2^(3/2)*l(1)^2*l(2)*l(3)^3*cos(q(2))+((-2^(3/2)*l(1)*l(2)^2)-2^(3/2)*l(1)^3)*l(3)^3-sqrt(2)*l(1)^3*l(2)^2*l(3))*cos(q(3)+q(2))+2^(3/2)*l(1)*l(2)^3*l(3)^2*sin(q(2))*sin(2*q(3))-sqrt(2)*l(1)^3*l(2)^2*l(3)*sin(q(2))*sin(q(3))) ...
%                         /(sqrt((-2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2)))-2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))-2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))-2*l(2)^2*l(3)^2*cos(2*q(3))+2*l(1)^2*l(2)*l(3)*cos(q(3))-l(1)^2*l(2)^2*cos(2*q(2))+2*l(1)*l(2)*l(3)^2*cos(q(2))+(2*l(2)^2+2*l(1)^2)*l(3)^2+l(1)^2*l(2)^2)*(2*l(1)^2*l(3)^2*cos(2*q(3)+2*q(2))+2*l(1)*l(2)*l(3)^2*cos(2*q(3)+q(2))+2*l(1)^2*l(2)*l(3)*cos(q(3)+2*q(2))+2*l(2)^2*l(3)^2*cos(2*q(3))-2*l(1)^2*l(2)*l(3)*cos(q(3))+l(1)^2*l(2)^2*cos(2*q(2))-2*l(1)*l(2)*l(3)^2*cos(q(2))+((-2*l(2)^2)-2*l(1)^2)*l(3)^2-l(1)^2*l(2)^2))
%                 ];
%         Jed = nan(Link,Link,Link);
%         for i = 1:Link
%         for j = 1:Link
%         for k = 1:Link
%             if i < 3
%                 Jed(i,j,k) = Jd(i,j,k);
%             else
%                 Jed(i,j,k) = Ud(j,k);
%             end
%         end
%         end
%         end

    otherwise
        err('error f3L_Jacobi_plus');
        
end

end
